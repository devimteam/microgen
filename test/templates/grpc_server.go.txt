// This file was automatically generated by "microgen" utility.
// Please, do not edit.
package transportgrpc

import (
	svc "github.com/devimteam/microgen/test/svc"
	protobuf "github.com/devimteam/microgen/test/svc/transport/converter/protobuf"
	grpc "github.com/go-kit/kit/transport/grpc"
	stringsvc "gitlab.devim.team/protobuf/stringsvc"
	context "golang.org/x/net/context"
)

type stringServiceServer struct {
	count grpc.Handler
}

func NewGRPCServer(endpoints *svc.Endpoints, opts ...grpc.ServerOption) stringsvc.StringServiceServer {
	return &stringServiceServer{count: grpc.NewServer(
		endpoints.CountEndpoint,
		protobuf.DecodeCountRequest,
		protobuf.EncodeCountResponse,
		opts...,
	)}
}

func (s *stringServiceServer) Count(ctx context.Context, req *stringsvc.CountRequest) (*stringsvc.CountResponse, error) {
	_, resp, err := s.count.ServeGRPC(ctx, req)
	if err != nil {
		return nil, err
	}
	return resp.(*stringsvc.CountResponse), nil
}
