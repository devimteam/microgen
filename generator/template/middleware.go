package template

import (
	"github.com/vetcher/godecl/types"
	. "github.com/vetcher/jennifer/jen"
)

const (
	MiddlewareTypeName = "Middleware"
)

type MiddlewareTemplate struct {
	packageName string
	PackagePath string
}

// Render middleware decorator
//
//		// This file was automatically generated by "microgen" utility.
//		// Please, do not edit.
//		package middleware
//
//		import svc "github.com/devimteam/microgen/test/svc"
//
//		type Middleware func(svc.StringService) svc.StringService
//
func (t *MiddlewareTemplate) Render(i *types.Interface) *Statement {
	t.packageName = "middleware"
	f := Statement{}
	f.Type().Id(MiddlewareTypeName).Func().Call(Qual(t.PackagePath, i.Name)).Qual(t.PackagePath, i.Name)
	return &f
}

func (MiddlewareTemplate) Path() string {
	return "./middleware/middleware.go"
}

func (t *MiddlewareTemplate) PackageName() string {
	return t.packageName
}
